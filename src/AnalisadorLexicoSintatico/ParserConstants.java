package AnalisadorLexicoSintatico;

public interface ParserConstants
{
    int START_SYMBOL = 40;

    int FIRST_NON_TERMINAL    = 40;
    int FIRST_SEMANTIC_ACTION = 71;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  2, -1, -1, -1, -1, -1, -1,  1, -1,  2,  2,  2, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  5,  4, -1, -1,  4, -1 },
        { -1, 12, -1, -1, -1, -1, -1, -1, -1, 13, 12, 12, 12, -1, 12, -1, -1, -1, -1, 13, 13, 13, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7,  8,  9, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 11, 11, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, 14, 14, 14, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 16, -1, -1, -1, -1, -1, 15, -1, -1, 16, 16, 16, 15, 16, 15, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, 18, 19, 20, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 25, 25, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, -1, -1, -1, -1, -1, -1, -1, 25, -1, 25 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, 26, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 35, 35, 35, 35, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, 35, -1, -1, -1, -1, -1, -1, -1, -1, 35, 35, -1, -1, -1, -1, -1, -1, -1, 35, -1, 35 },
        { -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, 36, 36, 36, 36, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, 36, 36, 37, -1, 36, -1 },
        { -1, 39, 39, 39, 39, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, -1, -1, -1, -1, -1, -1, 39, -1, 42 },
        { -1, 43, 43, 43, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1 },
        { -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, 44, 44, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, 45, -1, -1, -1, -1, 44, 45, 44, 44, 44, -1, 44, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 48, 49, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1 },
        { -1, 50, 50, 50, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1 },
        { -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, 51, 51, 51, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 51, 51, 52, 53, -1, -1, 51, 51, 51, 51, 51, -1, 51, -1 },
        { -1, 54, 54, 54, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 54, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1 },
        { -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, 55, 55, 55, 56, 57, 55, 55, 55, 55, 55, -1, 55, -1 },
        { -1, 58, 59, 60, 61, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 65, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        {  7, 41, 47,  8 },
        {  9, 46 },
        {  0 },
        {  2, 43 },
        {  0 },
        { 34, 42 },
        { 10 },
        { 20 },
        { 21 },
        { 22 },
        { 23 },
        { 45, 42, 35, 44 },
        {  0 },
        { 46 },
        { 49, 35, 48 },
        {  0 },
        { 47 },
        { 50 },
        { 51 },
        { 52 },
        { 55 },
        { 58 },
        {  2, 24, 60 },
        { 11, 37, 42, 38 },
        { 12, 37, 53, 38 },
        { 60, 54 },
        {  0 },
        { 34, 53 },
        { 13, 60, 56,  8 },
        { 14, 60, 47, 57 },
        {  0 },
        { 56 },
        { 15, 47, 59 },
        { 16, 60 },
        { 17, 60 },
        { 62, 61 },
        {  0 },
        { 36, 62, 61 },
        { 32, 62, 61 },
        { 63 },
        { 18 },
        { 19 },
        { 39, 62 },
        { 66, 64 },
        {  0 },
        { 65, 66 },
        { 25 },
        { 33 },
        { 26 },
        { 27 },
        { 68, 67 },
        {  0 },
        { 28, 68, 67 },
        { 29, 68, 67 },
        { 70, 69 },
        {  0 },
        { 30, 70, 69 },
        { 31, 70, 69 },
        {  2 },
        {  3 },
        {  4 },
        {  5 },
        {  6 },
        { 37, 60, 38 },
        { 28, 70 },
        { 29, 70 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "era esperado fim de programa",
        "era esperado identificador",
        "era esperado constante_int",
        "era esperado constante_float",
        "era esperado constante_char",
        "era esperado constante_string",
        "era esperado module",
        "era esperado end",
        "era esperado local",
        "era esperado bool",
        "era esperado request",
        "era esperado echo",
        "era esperado switch",
        "era esperado case",
        "era esperado do",
        "era esperado while",
        "era esperado until",
        "era esperado true",
        "era esperado false",
        "era esperado int",
        "era esperado float",
        "era esperado char",
        "era esperado string",
        "era esperado \"=\"",
        "era esperado \"==\"",
        "era esperado \"<\"",
        "era esperado \">\"",
        "era esperado \"+\"",
        "era esperado \"-\"",
        "era esperado \"*\"",
        "era esperado \"/\"",
        "era esperado \"|\"",
        "era esperado \"!=\"",
        "era esperado \",\"",
        "era esperado \";\"",
        "era esperado \"&\"",
        "era esperado \"(\"",
        "era esperado \")\"",
        "era esperado \"!\"",
        "era esperado module",
        "<declaracao_de_variaveis> inválido",
        "era esperado identificador",
        "era esperado , ; )",
        "<declaracao_de_identificadores1> inválido",
        "era esperado bool char float int string",
        "<declaracao_de_identificadores> inválido",
        "<lista_de_comandos> inválido",
        "<lista_de_comandos1> inválido",
        "<comando> inválido",
        "<atribuição> inválido",
        "<entrada_de_dados> inválido",
        "<saída_de_dados> inválido",
        "era esperado expressao",
        "<lista_de_expressões1> inválido",
        "<seleção> inválido",
        "<case> inválido",
        "<case1> inválido",
        "<repetição> inválido",
        "<repetição1> inválido",
        "era esperado expressao",
        "<expressao1> inválido",
        "<elemento> inválido",
        "<relacional> inválido",
        "<relacional1> inválido",
        "<operador_relacional> inválido",
        "<aritmetica> inválido",
        "<aritmetica1> inválido",
        "<termo> inválido",
        "<termo1> inválido",
        "<fator> inválido"
    };
}
