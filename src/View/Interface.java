/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import AnalisadorLexicoSintatico.LexicalError;
import AnalisadorLexicoSintatico.Lexico;
import AnalisadorLexicoSintatico.SemanticError;
import AnalisadorLexicoSintatico.Semantico;
import AnalisadorLexicoSintatico.Sintatico;
import AnalisadorLexicoSintatico.SyntaticError;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.nio.file.Files;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import AnalisadorLexicoSintatico.Token;

/**
 *
 * @author Usu√°rio
 */
public class Interface extends javax.swing.JFrame {

    private JPanel panelNumerosLinha;

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
        configurarAtalhoAbrirArquivo();
        adicionarPainelNumerosLinha();
        atualizarNumeroLinhas();
        configurarAtalhoNovoArquivo();
        configurarAtalhoSalvarArquivo();
        configurarAtalhosCompilar();
        configurarAtalhosEquipe();
        configurarAtalhoCtrl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        menu = new javax.swing.JToolBar();
        novoArquivo = new javax.swing.JButton();
        abrirArquivo = new javax.swing.JButton();
        salvarArquivo = new javax.swing.JButton();
        copiarArquivo = new javax.swing.JButton();
        colarArquivo = new javax.swing.JButton();
        recortarArquivo = new javax.swing.JButton();
        compilar = new javax.swing.JButton();
        equipe = new javax.swing.JButton();
        barraStatus = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        insercaoCodigo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1500, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(1500, 800));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(1500, 800));
        jPanel1.setMinimumSize(new java.awt.Dimension(1500, 800));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1500, 800));

        menu.setBackground(new java.awt.Color(204, 204, 204));
        menu.setMaximumSize(new java.awt.Dimension(1500, 70));
        menu.setMinimumSize(new java.awt.Dimension(1500, 70));
        menu.setPreferredSize(new java.awt.Dimension(1500, 70));

        novoArquivo.setBackground(new java.awt.Color(255, 255, 255));
        novoArquivo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        novoArquivo.setForeground(new java.awt.Color(0, 0, 0));
        novoArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/adicionar-pasta25px.png"))); // NOI18N
        novoArquivo.setText("Novo [ctrl-n]");
        novoArquivo.setFocusable(false);
        novoArquivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novoArquivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novoArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoArquivoActionPerformed(evt);
            }
        });
        menu.add(novoArquivo);

        abrirArquivo.setBackground(new java.awt.Color(255, 255, 255));
        abrirArquivo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        abrirArquivo.setForeground(new java.awt.Color(0, 0, 0));
        abrirArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/abrir-arquivo.png"))); // NOI18N
        abrirArquivo.setText("Abrir [ctrl-o]");
        abrirArquivo.setFocusable(false);
        abrirArquivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        abrirArquivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        abrirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArquivoActionPerformed(evt);
            }
        });
        menu.add(abrirArquivo);

        salvarArquivo.setBackground(new java.awt.Color(255, 255, 255));
        salvarArquivo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        salvarArquivo.setForeground(new java.awt.Color(0, 0, 0));
        salvarArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/salvar.png"))); // NOI18N
        salvarArquivo.setText("Salvar [ctrl-s]");
        salvarArquivo.setFocusable(false);
        salvarArquivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarArquivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarArquivoActionPerformed(evt);
            }
        });
        menu.add(salvarArquivo);

        copiarArquivo.setBackground(new java.awt.Color(255, 255, 255));
        copiarArquivo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        copiarArquivo.setForeground(new java.awt.Color(0, 0, 0));
        copiarArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/copiar-escrita.png"))); // NOI18N
        copiarArquivo.setText("Copiar [ctrl-c]");
        copiarArquivo.setFocusable(false);
        copiarArquivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        copiarArquivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        copiarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarArquivoActionPerformed(evt);
            }
        });
        menu.add(copiarArquivo);

        colarArquivo.setBackground(new java.awt.Color(255, 255, 255));
        colarArquivo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        colarArquivo.setForeground(new java.awt.Color(0, 0, 0));
        colarArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/copiar-escrita.png"))); // NOI18N
        colarArquivo.setText("Colar [ctrl-v]");
        colarArquivo.setFocusable(false);
        colarArquivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        colarArquivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        colarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colarArquivoActionPerformed(evt);
            }
        });
        menu.add(colarArquivo);

        recortarArquivo.setBackground(new java.awt.Color(255, 255, 255));
        recortarArquivo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        recortarArquivo.setForeground(new java.awt.Color(0, 0, 0));
        recortarArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/recortar.png"))); // NOI18N
        recortarArquivo.setText("Recortar [ctrl-x]");
        recortarArquivo.setFocusable(false);
        recortarArquivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        recortarArquivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        recortarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recortarArquivoActionPerformed(evt);
            }
        });
        menu.add(recortarArquivo);

        compilar.setBackground(new java.awt.Color(255, 255, 255));
        compilar.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        compilar.setForeground(new java.awt.Color(0, 0, 0));
        compilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/compilador.png"))); // NOI18N
        compilar.setText("Compilar [F7]");
        compilar.setFocusable(false);
        compilar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        compilar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilarActionPerformed(evt);
            }
        });
        menu.add(compilar);

        equipe.setBackground(new java.awt.Color(255, 255, 255));
        equipe.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        equipe.setForeground(new java.awt.Color(0, 0, 0));
        equipe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/socios.png"))); // NOI18N
        equipe.setText("Equipe [F1]");
        equipe.setFocusable(false);
        equipe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        equipe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        equipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipeActionPerformed(evt);
            }
        });
        menu.add(equipe);

        barraStatus.setBackground(new java.awt.Color(204, 204, 204));
        barraStatus.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        barraStatus.setForeground(new java.awt.Color(0, 0, 0));
        barraStatus.setText("Nenhum Arquivo Aberto");
        barraStatus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        barraStatus.setMaximumSize(new java.awt.Dimension(1500, 800));
        barraStatus.setMinimumSize(new java.awt.Dimension(1500, 25));
        barraStatus.setPreferredSize(new java.awt.Dimension(1500, 25));

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setDividerLocation(600);
        jSplitPane1.setDividerSize(10);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(1500, 800));
        jSplitPane1.setMinimumSize(new java.awt.Dimension(1500, 600));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(1500, 600));

        insercaoCodigo.setColumns(20);
        insercaoCodigo.setRows(5);
        jScrollPane1.setViewportView(insercaoCodigo);

        jSplitPane1.setTopComponent(jScrollPane1);

        resultado.setEditable(false);
        resultado.setColumns(20);
        resultado.setRows(5);
        jScrollPane2.setViewportView(resultado);

        jSplitPane1.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(barraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 1494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // configura√ß√£o para que as linhas possuam a numera√ß√£o.
    private void adicionarPainelNumerosLinha() {
        panelNumerosLinha = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                desenharNumerosLinha(g);
            }
        };

        panelNumerosLinha.setPreferredSize(new Dimension(50, 0)); // Largura fixa para os n√∫meros

        jScrollPane1.setRowHeaderView(panelNumerosLinha); // Adiciona o painel ao JScrollPane

        // Listener para atualizar n√∫meros de linha ao alterar o texto
        insercaoCodigo.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                atualizarNumeroLinhas();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                atualizarNumeroLinhas();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                atualizarNumeroLinhas();
            }
        });
    }

    private void desenharNumerosLinha(Graphics g) {
        int lineHeight = insercaoCodigo.getFontMetrics(insercaoCodigo.getFont()).getHeight();
        int visibleLines = getVisibleLines();
        int totalLines = insercaoCodigo.getLineCount();

        int startY = insercaoCodigo.getVisibleRect().y;
        int startLine = Math.max(0, startY / lineHeight);

        for (int i = startLine; i < totalLines && i < startLine + visibleLines; i++) {
            int y = (i + 1) * lineHeight;
            g.drawString(String.valueOf(i + 1), 5, y);
        }
    }

    private void atualizarNumeroLinhas() {
        panelNumerosLinha.setPreferredSize(new Dimension(50, insercaoCodigo.getHeight()));
        panelNumerosLinha.revalidate();
        panelNumerosLinha.repaint();
    }

    private int getVisibleLines() {
        return jScrollPane1.getViewport().getHeight() / insercaoCodigo.getFontMetrics(insercaoCodigo.getFont()).getHeight();
    }

    // limpa a tela
    private void limparTudo() {
        insercaoCodigo.setText("");
        resultado.setText("");
        barraStatus.setText("Nenhum arquivo aberto");
        arquivoAtual = null;
    }

    // atualiza√ß√£o da barra de status
    private void atualizarBarraDeStatus(File file) {
        String folderPath = file.getParent();
        String fileName = file.getName();
        barraStatus.setText("Pasta: " + folderPath + " | Arquivo: " + fileName);
    }

    // a√ß√µes chamadas
    private void configurarAtalhosEquipe() {
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = getRootPane().getActionMap();
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0), "equipe");
        actionMap.put("equipe", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                equipeActionPerformed(e);
            }
        });
    }


    private void equipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipeActionPerformed
        // TODO add your handling code here:
        resultado.setText("Equipe de Desenvolvimento:\n 1- Gabrielle Piske \n2 - Kawanna Cisz \n3- Kayla Gianotti Dias Macedo ");
    }//GEN-LAST:event_equipeActionPerformed

    private void configurarAtalhosCompilar() {
        // Configurar atalho F7
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = getRootPane().getActionMap();

        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0), "compilar");
        actionMap.put("compilar", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                compilarActionPerformed(e);
            }
        });
    }
    private void compilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilarActionPerformed
        String codigoFonte = insercaoCodigo.getText().trim();

        // Verifica se o c√≥digo fonte est√° vazio
        if (codigoFonte.isEmpty()) {
            resultado.setText("Erro: O c√≥digo fonte est√° vazio.");
            return;
        }

        BufferedReader reader = new BufferedReader(new StringReader(codigoFonte));
        Lexico lexico = new Lexico();
        Sintatico sintatico = new Sintatico();
        Semantico semantico = new Semantico();

        lexico.setInput(reader);

        StringBuilder saida = new StringBuilder();

        /// area a ser alterada
        try {
            sintatico.parse(lexico, semantico);
            saida.append("Programa compilado com sucesso!\n");
        } catch (SyntaticError e) {
            Token token = e.getToken();
            String esperado = e.getExpected();
            int linha = token.getPosition();
            
            saida.append("Erro na linha ").append(linha).append(" - ").append(lexema).append(" inv√°lida. Esperado: ").append(esperado).append("\n");
        
        } catch (LexicalError e) {
            saida.append("Erro L√©xico na linha ").append(e.getLine()).append(": ").append(e.getMessage()).append("\n");
        } catch (SemanticError e) {
            saida.append("Erro Sem√¢ntico: ").append(e.getMessage()).append("\n");
        } catch (Exception e) {
            saida.append("Erro inesperado: ").append(e.getMessage()).append("\n");
        }

        resultado.setText(saida.toString());
    }//GEN-LAST:event_compilarActionPerformed

    private void recortarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recortarArquivoActionPerformed
        // TODO add your handling code here:
        recortarArquivo();
    }//GEN-LAST:event_recortarArquivoActionPerformed

    private void recortarArquivo() {
        insercaoCodigo.cut();
    }

    private void colarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colarArquivoActionPerformed
        // TODO add your handling code here:
        colarArquivo();
    }//GEN-LAST:event_colarArquivoActionPerformed

    private void colarArquivo() {
        insercaoCodigo.paste();
    }

    private void copiarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarArquivoActionPerformed
        // TODO add your handling code here:
        copiarArquivo();
    }//GEN-LAST:event_copiarArquivoActionPerformed

    private void copiarArquivo() {
        insercaoCodigo.copy();
    }

    // configura√ß√µes para salvar arquivos
    private File arquivoAtual;

    private void salvarArquivo() {
        if (arquivoAtual == null) {

            JFileChooser fc = new JFileChooser();
            fc.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Arquivos de Texto (*.txt)", "txt"));
            int result = fc.showSaveDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                arquivoAtual = fc.getSelectedFile();
                if (!arquivoAtual.getName().endsWith(".txt")) {
                    arquivoAtual = new File(arquivoAtual.getPath() + ".txt");
                }
                salvarConteudoNoArquivo(arquivoAtual);
            }
        } else {
            salvarConteudoNoArquivo(arquivoAtual);
        }
    }

    private void salvarConteudoNoArquivo(File arquivo) {
        try {
            Files.write(arquivo.toPath(), insercaoCodigo.getText().getBytes());
            atualizarBarraDeStatus(arquivo);
            resultado.setText("Arquivo salvo com sucesso!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar o arquivo", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void configurarAtalhoSalvarArquivo() {
        KeyStroke ctrlS = KeyStroke.getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_DOWN_MASK);
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = getRootPane().getActionMap();

        inputMap.put(ctrlS, "salvarArquivo");
        actionMap.put("salvarArquivo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                salvarArquivo(); // Chama o m√©todo para salvar o arquivo
            }
        });
    }

    private void salvarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarArquivoActionPerformed
        salvarArquivo();
    }//GEN-LAST:event_salvarArquivoActionPerformed

    // configura√ß√£o para abrir arquivos
    private void configurarAtalhoAbrirArquivo() {
        KeyStroke ctrlO = KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_DOWN_MASK);
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = getRootPane().getActionMap();

        inputMap.put(ctrlO, "abrirArquivo");
        actionMap.put("abrirArquivo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                abrirArquivo();
            }
        });
    }

    private void abrirArquivo() {
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Arquivos de Texto (*.txt)", "txt"));
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            limparTudo();
            exibirConteudoDoArquivo(file);
            atualizarBarraDeStatus(file);
        } else {
        }
    }

    private void exibirConteudoDoArquivo(File file) {
        try {
            String content = new String(Files.readAllBytes(file.toPath()));
            insercaoCodigo.setText(content);
            arquivoAtual = file;
            atualizarBarraDeStatus(file);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao ler o arquivo", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void abrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArquivoActionPerformed
        abrirArquivo();

    }//GEN-LAST:event_abrirArquivoActionPerformed

    // configura√ß√£o do atalho para novo arquivo
    private void configurarAtalhoNovoArquivo() {
        KeyStroke ctrlN = KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK);
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = getRootPane().getActionMap();

        inputMap.put(ctrlN, "novoArquivo");
        actionMap.put("novoArquivo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                limparTudo();
            }
        });
    }

    //Atalhos cortar, copiar e colar
    private void configurarAtalhoCtrl() {

        KeyStroke ctrlC = KeyStroke.getKeyStroke(KeyEvent.VK_C, KeyEvent.CTRL_DOWN_MASK);
        KeyStroke ctrlX = KeyStroke.getKeyStroke(KeyEvent.VK_X, KeyEvent.CTRL_DOWN_MASK);
        KeyStroke ctrlV = KeyStroke.getKeyStroke(KeyEvent.VK_V, KeyEvent.CTRL_DOWN_MASK);

        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = getRootPane().getActionMap();

        inputMap.put(ctrlC, "copiarArquivo");
        inputMap.put(ctrlX, "recortarArquivo");
        inputMap.put(ctrlV, "colarArquivo");

        actionMap.put("copiarArquivo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                copiarArquivo();
            }
        });

        actionMap.put("recortarArquivo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                recortarArquivo();
            }
        });

        actionMap.put("colarArquivo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                colarArquivo();
            }
        });

    }

    private void novoArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoArquivoActionPerformed
        limparTudo();
        arquivoAtual = null;
    }//GEN-LAST:event_novoArquivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirArquivo;
    private javax.swing.JLabel barraStatus;
    private javax.swing.JButton colarArquivo;
    private javax.swing.JButton compilar;
    private javax.swing.JButton copiarArquivo;
    private javax.swing.JButton equipe;
    private javax.swing.JTextArea insercaoCodigo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar menu;
    private javax.swing.JButton novoArquivo;
    private javax.swing.JButton recortarArquivo;
    private javax.swing.JTextArea resultado;
    private javax.swing.JButton salvarArquivo;
    // End of variables declaration//GEN-END:variables
}
